/*  
Version: 1.0
Author: Louis_diox
Name: Animated speaker
*/

/* Options configurables (se référer à la documentation du widget) */
:root{
    --colorSpeak: #8bbf5e;
    --colorBase: #000000;
    --shake: infinite;
    --shakeSpeed: 3s;
    --shakeDelay: 0.5s;
    --pseudoBgColor: rgba(0,0,0,0.7);
    --pseudoColor: rgba(255,255,255,1);
    --borderWidth: 3px;
    --textSize: 100%;
    --spaceBetween: 50px;
}
   
.Voice_voiceContainer__adk9M > ul.Voice_voiceStates__a121W {
    display: flex!important;
    justify-content: center!important;
    align-items: center!important;
    gap: var(--spaceBetween)!important;
    margin-top: 50px!important;
}

li.Voice_voiceState__OCoZh{
    display: flex!important;
    flex-direction: column!important;
    justify-content: center!important;
    align-items: center!important;
    position: relative!important;
    width: 126px!important;
    height: 126px!important;
}

img.Voice_avatar__htiqH{
    margin: 0!important;
    padding: 0!important;
    border-radius: 10px!important;
    height: 120px!important;
    width: 120px!important;
    outline: solid var(--borderWidth) var(--colorBase)!important;
    border: none!important;
    position: relative!important;
    transition: all 0.2s ease!important;
}

img.Voice_avatar__htiqH.Voice_avatarSpeaking__lE\+4m {
    outline: solid var(--borderWidth) var(--colorSpeak)!important;
    transition: all 0.2s ease!important;
    animation: shake var(--shakeSpeed) var(--shakeDelay) linear var(--shake) alternate;
}

.Voice_user__8fGwX {
    position: absolute!important;
    bottom: 3px!important;
    left: 3px!important;
    text-align: center!important;
    transform-origin: center -11px;
}

li.Voice_voiceState__OCoZh > img.Voice_avatar__htiqH.Voice_avatarSpeaking__lE\+4m + .Voice_user__8fGwX::before{
    opacity: 1!important;
    transition: 0.2s ease; 
}

li.Voice_voiceState__OCoZh > img.Voice_avatar__htiqH.Voice_avatarSpeaking__lE\+4m + .Voice_user__8fGwX{
    animation: shake var(--shakeSpeed) var(--shakeDelay) linear var(--shake) alternate;
}

.Voice_user__8fGwX::before{
	content: ""!important;
    position: absolute!important;
    top: -185%!important;
    right: -15%!important;
    width: 50px!important;
    height: 50px!important;
    background-image: url("https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExMGM3NzNjNDIzNTc0M2YwZTIzMTNlMzc0ZWNhMDI2NTE2MDk5NzA1MCZlcD12MV9pbnRlcm5hbF9naWZzX2dpZklkJmN0PXM/vet3qE4fsmsHPukyfk/giphy.gif")!important;
    background-position: center center!important;
    background-repeat: no-repeat!important;
    background-size: 60%!important;
    background-color: var(--colorSpeak)!important;
    border-radius: 50vw!important;
    transform-origin: center center!important;
    animation: volumeSpin 1.5s ease-in-out alternate infinite!important;
    opacity: 0!important;
    transition: 0.2s ease; 
}

.Voice_user__8fGwX .Voice_name__TALd9 {
    color: var(--pseudoColor)!important;
    background-color: var(--pseudoBgColor)!important;
    display: block!important;
    width: 100px!important;
    height: 25px!important;
    overflow: hidden!important;
    text-overflow: ellipsis!important;
    white-space: nowrap!important;
    padding: 6px 10px 0px 10px!important;
    font-size: var(--textSize)!important;
    border-radius: 0px!important;
    border-bottom-right-radius: 10px!important;
    border-bottom-left-radius: 10px!important;
}

@keyframes volumeSpin {
    from {
        transform: rotate(-8deg)
    }
    to {
        transform: rotate(8deg)
    }
}

@keyframes shake {
    0% { transform: translate(0px, 0px) rotate(0deg); }
    10% { transform: translate(-1px, -2px) rotate(-1deg); }
    20% { transform: translate(-2px, 0px) rotate(1deg); }
    30% { transform: translate(2px, 2px) rotate(0deg); }
    40% { transform: translate(1px, -1px) rotate(1deg); }
    50% { transform: translate(-1px, 2px) rotate(-1deg); }
    60% { transform: translate(-2px, 1px) rotate(0deg); }
    70% { transform: translate(2px, 1px) rotate(-1deg); }
    80% { transform: translate(-1px, -1px) rotate(1deg); }
    90% { transform: translate(1px, 2px) rotate(0deg); }
    100% { transform: translate(1px, -2px) rotate(-1deg); }
}
